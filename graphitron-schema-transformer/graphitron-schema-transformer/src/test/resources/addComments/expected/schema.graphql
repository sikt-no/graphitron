input InnerInput {
  "feature A!"
  id: ID! @feature(flags : ["a"])
}

type InnerObject {
  id: ID!
  "feature A!"
  id2: ID @feature(flags : ["a"])
  "feature B!"
  extraFlag: ID @feature(flags : ["b"])
}

type Object2 implements Interface {
  "feature A!"
  id: ID! @feature(flags : ["a"])
}

input Input {
  id: ID!
  """
  existing inner description

  feature A!
  """
  inner: InnerInput @feature(flags : ["a"])
  "feature A!"
  id2: ID @feature(flags : ["a"])
  "feature B!"
  extraFlag: ID @feature(flags : ["b"])
}

interface Interface {
  """
  interface text

  feature A!
  """
  id: ID! @feature(flags : ["a"])
}

interface Node {
  id: ID!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  getObject(a0: String!): SomeObject
  getObjectWithInputs(a0: Input!, a1: [Input!]): SomeObject
  """
  existing getObject2 description
  multiple lines

  feature A!
  """
  getObject2: Object2 @feature(flags : ["a"])
  "feature A!"
  getObject3: SomeEnum @feature(flags : ["a"])
}

enum SomeEnum {
  """
  existing e0 description

  feature A!
  """
  e0 @feature(flags : ["a"])
  "feature A!"
  e1 @feature(flags : ["a"])
}

type SomeObject {
  id: ID!
  inner: [InnerObject!]!
}

"Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if` argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

directive @feature(flags: [String!]!) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
) on SCALAR
