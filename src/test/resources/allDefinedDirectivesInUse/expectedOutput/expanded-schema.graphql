type Adresse {
    gate: String @column(name : "ADRLIN2_HJEMSTED")
}

union AllErrors = ErrorType1 | ErrorType2

"An arbitrary precision signed decimal"
scalar BigDecimal

"An RFC-3339 compliant Full Date Scalar"
scalar Date

interface Error {
    message: String!
    path: [String!]!
}

type ErrorType1 implements Error {
    message: String!
    path: [String!]!
}

type ErrorType2 implements Error {
    message: String!
    path: [String!]!
}

type Kull implements Node @node {
    "Unik identifikator for kullet"
    id: ID!
    "Navn på kullet."
    navn: String! @column(name : "STUDIEKULLNAVN")
    "Oppstartstermin for kullet"
    termin: Termin!
}

enum Maalform {
    NOB
    NNO
    ENG
}

interface Node {
    id: ID!
}

type Permisjon implements Node @node {
    "Unik identifikator for permisjonen"
    id: ID!
    "Studentens studieretter på studieprogrammet permisjonen gjelder for"
    programStudieretter: [ProgramStudierett!]! @resolver @reference(condition : "PERMISJON_STUDIERETT")
    "Perioden studenten skal ha permisjon"
    permisjonsperiode: Permisjonsperiode!
}

"Periode for permisjonen"
type Permisjonsperiode {
    "Dato permisjonen starter"
    fra: Date! @column(name : "DATO_FRA")
    "Dato permisjonen slutter"
    til: Date! @column(name : "DATO_TIL")
}

type PersonProfil implements Node @node(table : "PERSON") {
    "Unik identifikator for personprofilen"
    id: ID!
    "Personens fornavn"
    fornavn: String!
    "Personens etternavn"
    etternavn: String!
    "Privat e-postadresse"
    privatEpost: String @column(name : "EMAILADRESSE_PRIVAT")
    "Arbeids-epostadresse for personer som ikke er ansatt ved institusjonen"
    arbeidsEpost: String @column(name : "EMAILADRESSE_ARBEID")
    "Epostadresse personen er blitt tildelt ved denne institusjonen (student- eller arbeids-epost)"
    institusjonsEpost: String @column(name : "EMAILADRESSE")
    "Mobiltelefonnummer"
    mobilTelefon: Telefon @resolver @reference(condition : "PERSON_TELEFON_MOBIL")
    "Privat telefonnummer"
    privatTelefon: Telefon @resolver @reference(condition : "PERSON_TELEFON_PRIVAT")
    "Personens folkeregistrerte adresse"
    folkeregistrertAdresse: Adresse
    "Personens fødselsdato"
    fodselsdato: Date! @column(name : "DATO_FODT")
    "Personens 11-sifrede fødselsnummer"
    fodselsnummer: String! @column(name : "FODSELSNR")
    "Personens morsmål. Returnerer en ISO-639-2-kode"
    morsmaal: String @column(name : "SPRAKKODE_MORSMAL")
    "Målform eller språk som personen ønsker å kontaktes på. Returnerer en [ISO-639-2](https://www.loc.gov/standards/iso639-2/php/code_list.php)-kode"
    maalform: Maalform @column(name : "SPRAKKODE_639_2", table : "SPRAK", key : "PERSON__MALFORM__SPRAK__FK")
    "Studierettene en person har hatt gjennom livsløpet"
    studieretter: [ProgramStudierett!]! @resolver
}

type ProgramStudierett implements Node @node(table : "STUDIERETT") {
    "Unik identifikator for studieretten"
    id: ID!
    "Personen som innehar studieretten"
    personProfil: PersonProfil! @resolver
    "Kullet studenten inngår i"
    kull: Kull!
}

type Query {
    personProfil(eierInstitusjonsnummer: String! @column(name : "INSTITUSJONSNR_EIER"), personlopenummer: [Int!] @column(name : "PERSONLOPENR")): PersonProfil
    studenter(eierInstitusjonsnummer: String! @column(name : "INSTITUSJONSNR_EIER")): StudentVedInstitusjon
    "@generated not supported for interfaces yet"
    node(id: ID!): Node @notGenerated
    "@generated not supported for unions yet"
    errors: [AllErrors!] @notGenerated
}

type StudentVedInstitusjon implements Node @node(table : "STUDENT") {
    id: ID!
    studentnummer: String! @column(name : "STUDENTNR_TILDELT")
    permisjoner: [Permisjon!]! @resolver
}

"Telefonnummer med landnummer"
type Telefon implements Node @node(table : "PERSON_TELEFON") {
    id: ID!
    "1-3-sifret landnummer for telefonnummret, med plusstegn foran"
    landnummer: String @column(name : "LANDKODE")
    "Selve telefonnummeret"
    nummer: String! @column(name : "TELEFONNR")
}

type Termin implements Node @node {
    "Unik identifikator for terminen."
    id: ID!
    termintype: Termintype! @column(name : "TERMINKODE")
    "Årstall for terminen."
    arstall: Int!
}

enum Termintype {
    "Vår"
    VAR @mapEnum(name : "VÅR")
    "Sommer"
    SOM @mapEnum(name : "SOM")
    "Høst"
    HOST @mapEnum(name : "HØST")
}

"Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if` argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Defines that there is supposed to be a resolver for this field."
directive @resolver on FIELD_DEFINITION

"Defines that the generator shouldn't attempt to generate a method for this field."
directive @notGenerated on FIELD_DEFINITION

"Knytter objektet til en tabell i KjerneAPI. Dette gjør objektet til en Node i grafen."
directive @node(
    "Tabellnavn i KjerneAPI. Antas å være samme som objektnavn hvis ikke oppgitt."
    table: String
) on OBJECT

"Kopi av @node for input-typer som ikke forsøker å implementere node."
directive @record(
    "Tabellnavn i KjerneAPI. Antas å være samme som objektnavn hvis ikke oppgitt."
    table: String
) on INPUT_OBJECT

"Knytter feltet (eller argumentet) til en kolonne i KjerneAPI."
directive @column(
    "Kolonnenavn i KjerneAPI."
    name: String!,
    "Slå opp navnet i en relatert tabell i stedet. Tabellnavn i KjerneAPI."
    table: String,
    "Fremmednøkkelen som knytter sammen den relaterte tabellen til gjeldende tabell."
    key: String
) on FIELD_DEFINITION | ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

"Connects the enum to an API enum, or DB column value."
directive @mapEnum(name: String!) on ENUM | ENUM_VALUE

"Knytter feltet til en service som har en metode for å utføre denne spørringen."
directive @service(
    "Navn på service som inneholder en metode som heter det samme som dette feltet."
    name: String!
) on FIELD_DEFINITION

"Knytter feltet til en relatert tabell i KjerneAPI."
directive @reference(
    "Tabellen i KjerneAPI."
    table: String,
    "Fremmednøkkelen som knytter sammen den relaterte tabellen til gjeldende tabell."
    key: String,
    "En skranke i KjerneAPI som begrenser hvilke rader som er av relevans for koblingen."
    condition: String
) on FIELD_DEFINITION

"Legger på ekstra begrensninger for dette feltet eller verdien."
directive @condition(
    "En skranke i KjerneAPI."
    name: String,
    "Hvis sant, overskriver det som ville vanligvis blitt generert av conditions for dette."
    override: Boolean = false
) on FIELD_DEFINITION | ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
) on SCALAR
