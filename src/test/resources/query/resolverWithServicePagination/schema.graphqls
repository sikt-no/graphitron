type Query {
  customersQueryConnection(ids: [ID!]! @field(name: "CUSTOMER_ID"), first: Int = 100, after: String): CustomerConnection @service(service : {name: "TEST_FETCH_CUSTOMER", method: "customersQuery0"})
  customersQueryDirect(id: ID! @field(name: "CUSTOMER_ID")): Customer @service(service : {name: "TEST_FETCH_CUSTOMER", method: "customersQuery1"})
}

type CustomerConnection {
  edges: [CustomerConnectionEdge]
  nodes: [Customer!]!
}

type CustomerConnectionEdge {
  cursor: String
  node: Customer
}

type Customer implements Node @table {
  id: ID!
  historicalAddresses(first: Int = 10, after: String): AddressConnection @splitQuery @service(service : {name: "TEST_FETCH_CUSTOMER"})
}

type AddressConnection {
  edges: [AddressConnectionEdge]
  nodes: [Address!]!
}

type AddressConnectionEdge {
  cursor: String
  node: Address
}

type Address implements Node @table {
  id: ID!
  postalCode: String!
}
