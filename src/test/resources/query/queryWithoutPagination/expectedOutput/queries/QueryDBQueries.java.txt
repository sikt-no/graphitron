package no.fellesstudentsystem.graphql.queries.query;

import static no.fellesstudentsystem.kjerneapi.FieldHelpers.*;
import static no.fellesstudentsystem.kjerneapi.Keys.*;
import static no.fellesstudentsystem.kjerneapi.Tables.*;
import static org.jooq.Functions.*;
import static org.jooq.impl.DSL.*;

import java.lang.String;
import java.util.List;
import javax.inject.Inject;
import no.fellesstudentsystem.graphql.generated.model.Rom;
import no.fellesstudentsystem.graphql.helpers.selection.SelectionSets;
import org.jooq.DSLContext;

public class QueryDBQueries {
    @Inject
    DSLContext ctx;

    public List<Rom> romForQuery(String bygningskode, SelectionSets select) {
        return ctx
                .select(
                        row(
                                ROM.getId().as("id"),
                                select.optional("romnavn", ROM.ROMNAVN).as("romnavn"),
                                select.optional("bygningskode", ROM.BYGNINGSKODE).as("bygningskode")
                        ).mapping(nullOnAllNull(Rom::new)).as("rom")
                )
                .from(ROM)
                .where(ROM.BYGNINGSKODE.eq(bygningskode))
                .orderBy(ROM.getIdFields())
                .fetch(0, Rom.class);
    }
}
