package no.fellesstudentsystem.graphql.resolvers.query;

import graphql.schema.DataFetchingEnvironment;
import java.lang.Exception;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import javax.inject.Inject;
import no.fellesstudentsystem.graphql.generated.api.QueryResolver;
import no.fellesstudentsystem.graphql.generated.model.Rom;
import no.fellesstudentsystem.graphql.helpers.EnvironmentUtils;
import no.fellesstudentsystem.graphql.helpers.selection.SelectionSet;
import no.fellesstudentsystem.graphql.queries.query.QueryDBQueries;

public class QueryGeneratedResolver implements QueryResolver {
    @Inject
    private QueryDBQueries queryDBQueries;

    @Override
    public CompletableFuture<List<Rom>> rom(String bygningskode, DataFetchingEnvironment env) throws
            Exception {
        var selectionSet = new SelectionSet(EnvironmentUtils.getSelectionSetsFromEnvironment(env));
        var dbResult = queryDBQueries.romForQuery(bygningskode, selectionSet);
        return CompletableFuture.completedFuture(dbResult);
    }
}
