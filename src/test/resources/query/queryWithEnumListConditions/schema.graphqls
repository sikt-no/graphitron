type Query {
    listArgumentNoCondition(
        ratings: [Rating!] @field(name: "RATING")
        releaseYear: String! @field(name: "RELEASE_YEAR")
    ): [Film]

    listArgumentCondition(
        ratings: [Rating!] @field(name: "RATING") @condition(condition: {name: "TEST_FILM_RATING", method: "ratingList"})
        releaseYear: String! @field(name: "RELEASE_YEAR")
    ): [Film]

    listArgumentWithOverrideCondition(
        ratings: [Rating!] @field(name: "RATING") @condition(condition: {name: "TEST_FILM_RATING", method: "ratingList"}, override: true)
        releaseYear: String! @field(name: "RELEASE_YEAR")
    ): [Film]

    listArgumentAndFieldCondition(
        ratings: [Rating!] @field(name: "RATING")
        releaseYear: String! @field(name: "RELEASE_YEAR")
    ): [Film] @condition(condition: {name: "TEST_FILM_RATING", method: "ratingListAll"})

    inputArgumentContainingListCondition(
        filter: RatingFilterInput
    ): [Film]

    listArgumentWithEnumDirectiveNoCondition(
        ratings: [RatingReference!] @field(name: "RATING")
        releaseYear: String @field(name: "RELEASE_YEAR")
    ): [Film]

    listArgumentWithEnumDirectiveCondition(
        ratings: [RatingReference!] @field(name: "RATING") @condition(condition: {name: "TEST_FILM_RATING", method: "ratingListEnumReference"})
        releaseYear: String @field(name: "RELEASE_YEAR")
    ): [Film]
}

type Film @table {
    id: ID!
    rating: Rating!
}

enum Rating {
    G @field(name: "G")
    PG_13 @field(name: "PG-13")
    R @field(name: "R")
}

enum RatingReference @enum(enumReference: {name: "TEST_ENUM_RATING_LIST"}) {
    G
    PG_13
    R
}

input RatingFilterInput {
    ratings: [Rating!] @field(name: "RATING") @condition(condition: {name: "TEST_FILM_RATING", method: "ratingList"}, override: true)
    releaseYear: String! @field(name: "RELEASE_YEAR")
}
