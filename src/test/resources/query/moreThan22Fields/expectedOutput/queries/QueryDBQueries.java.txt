package no.fellesstudentsystem.graphql.queries.query;

import static no.fellesstudentsystem.kjerneapi.FieldHelpers.*;
import static no.fellesstudentsystem.kjerneapi.Keys.*;
import static no.fellesstudentsystem.kjerneapi.Tables.*;
import static org.jooq.Functions.*;
import static org.jooq.impl.DSL.*;

import java.lang.Integer;
import java.lang.String;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.inject.Inject;
import no.fellesstudentsystem.graphql.generated.model.Email;
import no.fellesstudentsystem.graphql.generated.model.FolkeregistrertAdresse;
import no.fellesstudentsystem.graphql.generated.model.Maalform;
import no.fellesstudentsystem.graphql.generated.model.PersonProfil;
import no.fellesstudentsystem.graphql.helpers.selection.SelectionSets;
import org.jooq.DSLContext;

public class QueryDBQueries {
    @Inject
    DSLContext ctx;

    public List<PersonProfil> personProfilForQuery(String eierInstitusjonsnummer,
            List<Integer> personlopenummer, SelectionSets select) {
        return ctx
                .select(
                        row(
                                PERSON.getId().as("id"),
                                select.optional("fornavn", PERSON.FORNAVN).as("fornavn"),
                                select.optional("fornavn2", PERSON.FORNAVN).as("fornavn2"),
                                select.optional("fornavn3", PERSON.FORNAVN).as("fornavn3"),
                                select.optional("fornavn4", PERSON.FORNAVN).as("fornavn4"),
                                select.optional("fornavn5", PERSON.FORNAVN).as("fornavn5"),
                                select.optional("fornavn6", PERSON.FORNAVN).as("fornavn6"),
                                select.optional("fornavn7", PERSON.FORNAVN).as("fornavn7"),
                                select.optional("fornavn8", PERSON.FORNAVN).as("fornavn8"),
                                select.optional("fornavn9", PERSON.FORNAVN).as("fornavn9"),
                                select.optional("fornavn10", PERSON.FORNAVN).as("fornavn10"),
                                select.optional("fornavn11", PERSON.FORNAVN).as("fornavn11"),
                                select.optional("fornavn12", PERSON.FORNAVN).as("fornavn12"),
                                select.optional("fornavn13", PERSON.FORNAVN).as("fornavn13"),
                                select.optional("fornavn14", PERSON.FORNAVN).as("fornavn14"),
                                select.optional("fornavn15", PERSON.FORNAVN).as("fornavn15"),
                                select.optional("fornavn16", PERSON.FORNAVN).as("fornavn16"),
                                select.optional("fornavn17", PERSON.FORNAVN).as("fornavn17"),
                                select.optional("fornavn18", PERSON.FORNAVN).as("fornavn18"),
                                select.optional("fornavn19", PERSON.FORNAVN).as("fornavn19"),
                                select.optional("fornavn20", PERSON.FORNAVN).as("fornavn20"),
                                select.optional("etternavn", PERSON.ETTERNAVN).as("etternavn"),
                                select.optional("institusjonsEpost", PERSON.EMAILADRESSE).as("institusjonsEpost"),
                                row(
                                        select.optional("folkeregistrertAdresse/co", PERSON.ADRLIN1_HJEMSTED).as("co"),
                                        select.optional("folkeregistrertAdresse/gate", PERSON.ADRLIN2_HJEMSTED).as("gate")
                                ).mapping(nullOnAllNull(FolkeregistrertAdresse::new)).as("folkeregistrertAdresse"),
                                select.optional("fodselsdato", PERSON.DATO_FODT).as("fodselsdato"),
                                select.optional("fodselsnummer", PERSON.FODSELSNR).as("fodselsnummer"),
                                row(
                                        select.optional("email/privatEpost", PERSON.EMAILADRESSE_PRIVAT).as("privatEpost"),
                                        select.optional("email/privatEpost2", PERSON.EMAILADRESSE_PRIVAT).as("privatEpost2"),
                                        select.optional("email/privatEpost3", PERSON.EMAILADRESSE_PRIVAT).as("privatEpost3"),
                                        select.optional("email/privatEpost4", PERSON.EMAILADRESSE_PRIVAT).as("privatEpost4"),
                                        select.optional("email/privatEpost5", PERSON.EMAILADRESSE_PRIVAT).as("privatEpost5"),
                                        select.optional("email/privatEpost6", PERSON.EMAILADRESSE_PRIVAT).as("privatEpost6"),
                                        select.optional("email/privatEpost7", PERSON.EMAILADRESSE_PRIVAT).as("privatEpost7"),
                                        select.optional("email/privatEpost8", PERSON.EMAILADRESSE_PRIVAT).as("privatEpost8"),
                                        select.optional("email/privatEpost9", PERSON.EMAILADRESSE_PRIVAT).as("privatEpost9"),
                                        select.optional("email/privatEpost10", PERSON.EMAILADRESSE_PRIVAT).as("privatEpost10"),
                                        select.optional("email/privatEpost11", PERSON.EMAILADRESSE_PRIVAT).as("privatEpost11"),
                                        select.optional("email/privatEpost12", PERSON.EMAILADRESSE_PRIVAT).as("privatEpost12"),
                                        select.optional("email/privatEpost13", PERSON.EMAILADRESSE_PRIVAT).as("privatEpost13"),
                                        select.optional("email/privatEpost14", PERSON.EMAILADRESSE_PRIVAT).as("privatEpost14"),
                                        select.optional("email/privatEpost15", PERSON.EMAILADRESSE_PRIVAT).as("privatEpost15"),
                                        select.optional("email/privatEpost16", PERSON.EMAILADRESSE_PRIVAT).as("privatEpost16"),
                                        select.optional("email/privatEpost17", PERSON.EMAILADRESSE_PRIVAT).as("privatEpost17"),
                                        select.optional("email/privatEpost18", PERSON.EMAILADRESSE_PRIVAT).as("privatEpost18"),
                                        select.optional("email/privatEpost19", PERSON.EMAILADRESSE_PRIVAT).as("privatEpost19"),
                                        select.optional("email/privatEpost20", PERSON.EMAILADRESSE_PRIVAT).as("privatEpost20"),
                                        select.optional("email/privatEpost21", PERSON.EMAILADRESSE_PRIVAT).as("privatEpost21"),
                                        select.optional("email/privatEpost22", PERSON.EMAILADRESSE_PRIVAT).as("privatEpost22"),
                                        select.optional("email/privatEpost23", PERSON.EMAILADRESSE_PRIVAT).as("privatEpost23")
                                ).mapping(Email.class, r ->
                                        Arrays.stream(r).allMatch(Objects::isNull) ? null : new Email(
                                                PERSON.EMAILADRESSE_PRIVAT.getDataType().convert(r[0]),
                                                PERSON.EMAILADRESSE_PRIVAT.getDataType().convert(r[1]),
                                                PERSON.EMAILADRESSE_PRIVAT.getDataType().convert(r[2]),
                                                PERSON.EMAILADRESSE_PRIVAT.getDataType().convert(r[3]),
                                                PERSON.EMAILADRESSE_PRIVAT.getDataType().convert(r[4]),
                                                PERSON.EMAILADRESSE_PRIVAT.getDataType().convert(r[5]),
                                                PERSON.EMAILADRESSE_PRIVAT.getDataType().convert(r[6]),
                                                PERSON.EMAILADRESSE_PRIVAT.getDataType().convert(r[7]),
                                                PERSON.EMAILADRESSE_PRIVAT.getDataType().convert(r[8]),
                                                PERSON.EMAILADRESSE_PRIVAT.getDataType().convert(r[9]),
                                                PERSON.EMAILADRESSE_PRIVAT.getDataType().convert(r[10]),
                                                PERSON.EMAILADRESSE_PRIVAT.getDataType().convert(r[11]),
                                                PERSON.EMAILADRESSE_PRIVAT.getDataType().convert(r[12]),
                                                PERSON.EMAILADRESSE_PRIVAT.getDataType().convert(r[13]),
                                                PERSON.EMAILADRESSE_PRIVAT.getDataType().convert(r[14]),
                                                PERSON.EMAILADRESSE_PRIVAT.getDataType().convert(r[15]),
                                                PERSON.EMAILADRESSE_PRIVAT.getDataType().convert(r[16]),
                                                PERSON.EMAILADRESSE_PRIVAT.getDataType().convert(r[17]),
                                                PERSON.EMAILADRESSE_PRIVAT.getDataType().convert(r[18]),
                                                PERSON.EMAILADRESSE_PRIVAT.getDataType().convert(r[19]),
                                                PERSON.EMAILADRESSE_PRIVAT.getDataType().convert(r[20]),
                                                PERSON.EMAILADRESSE_PRIVAT.getDataType().convert(r[21]),
                                                PERSON.EMAILADRESSE_PRIVAT.getDataType().convert(r[22])
                                        )
                                ).as("email"),
                                select.optional("morsmaal", PERSON.person_Morsmal_Sprak_Fk().SPRAKKODE_639_2).as("morsmaal"),
                                select.optional("maalform", PERSON.person_Malform_Sprak_Fk().SPRAKKODE_639_2.convert(Maalform.class, s -> s == null ? null : Map.of("NOB", Maalform.NOB, "NNO", Maalform.NNO, "ENG", Maalform.ENG).getOrDefault(s, null), s -> s == null ? null : Map.of(Maalform.NOB, "NOB", Maalform.NNO, "NNO", Maalform.ENG, "ENG").getOrDefault(s, null))).as("maalform")
                        ).mapping(PersonProfil.class, r ->
                                Arrays.stream(r).allMatch(Objects::isNull) ? null : new PersonProfil(
                                        (String) r[0],
                                        PERSON.FORNAVN.getDataType().convert(r[1]),
                                        PERSON.FORNAVN.getDataType().convert(r[2]),
                                        PERSON.FORNAVN.getDataType().convert(r[3]),
                                        PERSON.FORNAVN.getDataType().convert(r[4]),
                                        PERSON.FORNAVN.getDataType().convert(r[5]),
                                        PERSON.FORNAVN.getDataType().convert(r[6]),
                                        PERSON.FORNAVN.getDataType().convert(r[7]),
                                        PERSON.FORNAVN.getDataType().convert(r[8]),
                                        PERSON.FORNAVN.getDataType().convert(r[9]),
                                        PERSON.FORNAVN.getDataType().convert(r[10]),
                                        PERSON.FORNAVN.getDataType().convert(r[11]),
                                        PERSON.FORNAVN.getDataType().convert(r[12]),
                                        PERSON.FORNAVN.getDataType().convert(r[13]),
                                        PERSON.FORNAVN.getDataType().convert(r[14]),
                                        PERSON.FORNAVN.getDataType().convert(r[15]),
                                        PERSON.FORNAVN.getDataType().convert(r[16]),
                                        PERSON.FORNAVN.getDataType().convert(r[17]),
                                        PERSON.FORNAVN.getDataType().convert(r[18]),
                                        PERSON.FORNAVN.getDataType().convert(r[19]),
                                        PERSON.FORNAVN.getDataType().convert(r[20]),
                                        PERSON.ETTERNAVN.getDataType().convert(r[21]),
                                        PERSON.EMAILADRESSE.getDataType().convert(r[22]),
                                        (FolkeregistrertAdresse) r[23],
                                        PERSON.DATO_FODT.getDataType().convert(r[24]),
                                        PERSON.FODSELSNR.getDataType().convert(r[25]),
                                        (Email) r[26],
                                        PERSON.person_Morsmal_Sprak_Fk().SPRAKKODE_639_2.getDataType().convert(r[27]),
                                        (Maalform) r[28]
                                )
                        ).as("personProfil")
                )
                .from(PERSON)
                .where(PERSON.INSTITUSJONSNR_EIER.eq(eierInstitusjonsnummer))
                .and(personlopenummer != null && personlopenummer.size() > 0 ? PERSON.PERSONLOPENR.in(personlopenummer) : noCondition())
                .orderBy(PERSON.getIdFields())
                .fetch(0, PersonProfil.class);
    }
}
