type Query {
  customersQuery: OuterWrapper @service(service: {name: "TEST_FETCH_CUSTOMER", method: "customerQueryWithRecord"})
}

type OuterWrapper @record(record: {name: "TEST_CUSTOMER_RECORD"}) {
  customer: Customer @field(name: "record")
}

type Customer implements Node @table {
  id: ID!
  wrapper: Wrapper
}

type Wrapper {
  historicalAddresses: [Address!]! @splitQuery @service(service: {name: "TEST_FETCH_CUSTOMER"})
}

type Address @record(record: {name: "TEST_ADDRESS_RECORD"}) {
  id: ID!
  inner: InnerWrapper
  city: AddressCity0
  cityRecord: AddressCity1
}

type InnerWrapper {
  postalCode: String!
}

type AddressCity0 @table(name: "City") {
  city: String!
}

type AddressCity1 @record(record: {name: "TEST_CITY_RECORD"}) {
  city: String! @field(name: "cityName")
}
