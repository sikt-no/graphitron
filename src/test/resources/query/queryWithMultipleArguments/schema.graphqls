interface Node {
  id: ID!
}

type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String
  endCursor: String
}

type PersonProfil implements Node @table(name : "PERSON") {
  id: ID!
  fornavn: String!
  etternavn: String!
  personkode: Int
}

type Query {
  personTwoArguments(eierInstitusjonsnummer: String! @column(name : "INSTITUSJONSNR_EIER"), personlopenummer: [Int!] @column(name : "PERSONLOPENR"), first: Int = 100, after: String): QueryPerson2Connection
  personFiveArguments(
    eierInstitusjonsnummer: String! @column(name : "INSTITUSJONSNR_EIER"),
    personlopenummer: [Int!] @column(name : "PERSONLOPENR"),
    fornavn: String,
    "Optional"
    etternavn: String!,
    "Mandatory"
    personkode: Int,
    first: Int = 100,
    after: String
  ): QueryPerson5Connection!
}

type QueryPerson2Connection {
  edges: [QueryPerson2ConnectionEdge]
  pageInfo: PageInfo
  nodes: [PersonProfil!]!
}

type QueryPerson2ConnectionEdge {
  cursor: String
  node: PersonProfil
}

type QueryPerson5Connection {
  edges: [QueryPerson5ConnectionEdge]
  pageInfo: PageInfo
  nodes: [PersonProfil!]!
}

type QueryPerson5ConnectionEdge {
  cursor: String
  node: PersonProfil
}
