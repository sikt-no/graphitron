type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String
  endCursor: String
}

type Film implements Node @table {
  id: ID!
  title: String!
  description: String
}

type Query {
  filmTwoArguments(
    releaseYear: String! @column(name : "RELEASE_YEAR"),
    languageID: [Int!] @column(name : "LANGUAGE_ID"),
    first: Int = 100,
    after: String
  ): QueryFilm2Connection
  filmFiveArguments(
    releaseYear: String! @column(name : "RELEASE_YEAR"),
    languageID: [Int!] @column(name : "LANGUAGE_ID"),
    "Optional"
    description: String,
    "Mandatory"
    title: String!,
    length: Int,
    first: Int = 100,
    after: String
  ): QueryFilm5Connection!
}

type QueryFilm2Connection {
  edges: [QueryFilm2ConnectionEdge]
  pageInfo: PageInfo
  nodes: [Film!]!
}

type QueryFilm2ConnectionEdge {
  cursor: String
  node: Film
}

type QueryFilm5Connection {
  edges: [QueryFilm5ConnectionEdge]
  pageInfo: PageInfo
  nodes: [Film!]!
}

type QueryFilm5ConnectionEdge {
  cursor: String
  node: Film
}
