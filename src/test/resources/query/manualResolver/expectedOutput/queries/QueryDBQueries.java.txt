package fake.code.generated.queries.query;

import static no.sikt.graphitron.jooq.generated.testdata.FieldHelpers.*;
import static no.sikt.graphitron.jooq.generated.testdata.Keys.*;
import static no.sikt.graphitron.jooq.generated.testdata.Tables.*;
import static org.jooq.Functions.*;
import static org.jooq.impl.DSL.*;

import fake.graphql.example.package.model.Customer;
import java.lang.String;
import java.util.List;
import no.fellesstudentsystem.graphql.helpers.selection.SelectionSet;
import org.jooq.DSLContext;

public class QueryDBQueries {
    public List<Customer> customersForQuery(DSLContext ctx, List<String> storeIds,
            SelectionSet select) {
        return ctx
                .select(
                        row(
                                CUSTOMER.getId().as("id")
                        ).mapping(nullOnAllNull(Customer::new)).as("customers")
                )
                .from(CUSTOMER)
                .where(storeIds.size() > 0 ? CUSTOMER.STORE_ID.in(storeIds) : noCondition())
                .orderBy(CUSTOMER.getIdFields())
                .fetch(0, Customer.class);
    }
}