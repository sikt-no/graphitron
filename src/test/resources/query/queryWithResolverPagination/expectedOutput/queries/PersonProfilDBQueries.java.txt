package no.fellesstudentsystem.graphql.queries.query;

import static no.fellesstudentsystem.kjerneapi.FieldHelpers.*;
import static no.fellesstudentsystem.kjerneapi.Keys.*;
import static no.fellesstudentsystem.kjerneapi.Tables.*;
import static org.jooq.Functions.*;
import static org.jooq.impl.DSL.*;

import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.inject.Inject;
import no.fellesstudentsystem.graphql.generated.model.Pass;
import no.fellesstudentsystem.graphql.helpers.selection.SelectionSet;
import org.jooq.DSLContext;
import org.jooq.Record2;

public class PersonProfilDBQueries {
    @Inject
    DSLContext ctx;

    public Map<String, List<Pass>> passForPersonProfil(Set<String> personProfilIder,
            Integer pageSize, String after, SelectionSet select) {
        return ctx
                .select(
                        PASS.getPersonId(),
                        row(
                                PASS.getId().as("id"),
                                select.optional("passnummer", PASS.NUMMER).as("passnummer")
                        ).mapping(nullOnAllNull(Pass::new)).as("pass")
                )
                .from(PASS)
                .where(PASS.hasPersonIds(personProfilIder))
                .orderBy(PASS.getIdFields())
                .seek(PASS.getIdValues(after))
                .limit(pageSize + 1)
                .fetchGroups(Record2::value1, Record2::value2);
    }

    public Integer countPassForPersonProfil(Set<String> personProfilIder) {
        return ctx
                .select(count().as("totalCount"))
                .from(PASS)
                .where(PASS.hasPersonIds(personProfilIder))
                .fetchOne(0, Integer.class);
    }
}
