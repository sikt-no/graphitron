type PageInfo {
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  startCursor: String
  endCursor: String
}

type Inventory implements Node @table {
  id: ID!
  storeId: String! @field(name : "STORE_ID")
}

type InventoryConnection {
  edges: [InventoryConnectionEdge]
  pageInfo: PageInfo
  nodes: [Inventory!]!
}

type InventoryConnectionEdge {
  cursor: String
  node: Inventory
}

type Film implements Node @table {
  id: ID!
  inventory(first: Int = 10, after: String): InventoryConnection @splitQuery #pagination on resolver
  title: String!
}

type FilmConnection {
  edges: [FilmConnectionEdge]
  pageInfo: PageInfo
  nodes: [Film!]!
}

type FilmConnectionEdge {
  cursor: String
  node: Film
}

type Query {
  film(releaseYear: String! @field(name : "RELEASE_YEAR"), first: Int = 100, after: String): FilmConnection
  film2(releaseYear: String! @field(name : "RELEASE_YEAR")): [Film]
}
