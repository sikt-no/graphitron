package fake.code.example.package.queries.query;

import static no.fellesstudentsystem.kjerneapi.FieldHelpers.*;
import static no.fellesstudentsystem.kjerneapi.Keys.*;
import static no.fellesstudentsystem.kjerneapi.Tables.*;
import static org.jooq.Functions.*;
import static org.jooq.impl.DSL.*;

import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Set;
import javax.inject.Inject;
import fake.graphql.example.package.model.Eierinstitusjon;
import no.fellesstudentsystem.graphql.helpers.selection.SelectionSet;
import org.jooq.DSLContext;
import org.jooq.Record2;

public class StudentDBQueries {
    @Inject
    DSLContext ctx;

    public Map<String, List<Eierinstitusjon>> institiusjonForStudent(Set<String> studentIder,
            SelectionSet select) {
        return ctx
                .select(
                        STUDENT.getId(),
                        row(
                                STUDENT.eierinstitusjon().getId().as("id")
                        ).mapping(nullOnAllNull(Eierinstitusjon::new)).as("institiusjon")
                )
                .from(STUDENT)
                .where(STUDENT.hasIds(studentIder))
                .and(no.fellesstudentsystem.graphitron.conditions.StudentTestConditions.studentEierinstitusjon(STUDENT, EIERINSTITUSJON))
                .fetchGroups(Record2::value1, Record2::value2);
    }
}
