package no.fellesstudentsystem.graphql.resolvers.query;

import graphql.schema.DataFetchingEnvironment;
import java.lang.Exception;
import java.lang.Override;
import java.lang.String;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import javax.inject.Inject;
import no.fellesstudentsystem.graphql.generated.api.QueryResolver;
import no.fellesstudentsystem.graphql.generated.model.Emnevalgstatus;
import no.fellesstudentsystem.graphql.helpers.EnvironmentUtils;
import no.fellesstudentsystem.graphql.helpers.selection.SelectionSets;
import no.fellesstudentsystem.graphql.queries.QueryDBQueries;

public class QueryGeneratedResolver implements QueryResolver {
    @Inject
    private QueryDBQueries queryDBQueries;

    @Override
    public CompletableFuture<List<Emnevalgstatus>> emnevalgstatus(String id,
            DataFetchingEnvironment env) throws Exception {
        var dbResult = queryDBQueries.emnevalgstatusForQuery(id, new SelectionSets(EnvironmentUtils.getSelectionSetsFromEnvironment(env)));
        return CompletableFuture.completedFuture(dbResult);
    }
}
