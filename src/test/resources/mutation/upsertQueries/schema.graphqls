input EndreInput @record(table : "PERSON") {
  id: ID!
  fornavn: String!
  etternavn: String!
  privatEpost: String @column(name : "EMAILADRESSE_PRIVAT")
  kjonn: Kjonn!
  statusEksporter: Boolean! @column(name : "STATUS_EKSPORTER_FLR")
}

enum Kjonn @mapEnum(name: "KJONN_TEST") {
  MANN
  KVINNE
}

type EndreResponse {
  id: ID!
  fornavn: String
  privatEpost: String @column(name : "epostField")
}

type EndreResponseWithPerson {
  id: ID!
  personProfil: PersonProfil @column(name : "persProf")
  post: Postadresse
}

type Mutation {
  registrerPersonInput(input: EndreInput!): ID! @mutationType(typeName: UPSERT)
  registrerPerson2Params(input: EndreInput!, etternavn: String): ID! @mutationType(typeName: UPSERT)
  registrerPersonInputAndResponse(input: EndreInput!): EndreResponse! @mutationType(typeName: UPSERT)
  registrerPersonWithProfilResponse(input: EndreInput!): EndreResponseWithPerson! @mutationType(typeName: UPSERT)
}

type PersonProfil implements Node @table(name : "PERSON") {
  id: ID!
  fornavn: String!
  etternavn: String!
  privatEpost: String @column(name : "EMAILADRESSE_PRIVAT")
  dod: Boolean @column(name : "STATUS_DOD")
}
