package fake.code.example.package.resolvers.mutation;

import graphql.schema.DataFetchingEnvironment;
import java.lang.Exception;
import java.lang.Override;
import java.util.concurrent.CompletableFuture;
import javax.inject.Inject;
import no.fellesstudentsystem.graphitron.services.TestPersonService;
import fake.graphql.example.package.api.EndrePersonInputAndResponseMutationResolver;
import fake.graphql.example.package.model.EndreInput;
import fake.graphql.example.package.model.EndreResponse;
import no.fellesstudentsystem.graphql.helpers.arguments.Arguments;
import no.fellesstudentsystem.kjerneapi.FieldHelpers;
import no.fellesstudentsystem.kjerneapi.tables.records.PersonRecord;
import org.jooq.DSLContext;

public class EndrePersonInputAndResponseGeneratedResolver implements EndrePersonInputAndResponseMutationResolver {
    @Inject
    DSLContext ctx;

    @Override
    public CompletableFuture<EndreResponse> endrePersonInputAndResponse(EndreInput input,
            DataFetchingEnvironment env) throws Exception {
        var ctx = env.getLocalContext() == null ? this.ctx : (DSLContext) env.getLocalContext();
        var testPersonService = new TestPersonService(ctx);
        var flatArguments = Arguments.flattenArgumentKeys(env.getArguments());

        var inputRecord = new PersonRecord();
        inputRecord.attach(ctx.configuration());

        if (input != null) {
            if (flatArguments.contains("input/privatEpost")) {
                inputRecord.setEmailadressePrivat(input.getPrivatEpost());
            }
            if (flatArguments.contains("input/id")) {
                inputRecord.setId(input.getId());
            }
            if (flatArguments.contains("input/fornavn")) {
                inputRecord.setFornavn(input.getFornavn());
            }
            FieldHelpers.setPersonKeysFromPlattformIds(ctx, inputRecord);
        }

        var endrePersonInputAndResponseResult = testPersonService.endrePersonInputAndResponse(inputRecord);


        var endreResponse = new EndreResponse();
        endreResponse.setId(endrePersonInputAndResponseResult.getId());
        endreResponse.setFornavn(endrePersonInputAndResponseResult.getFornavn());
        endreResponse.setPrivatEpost(endrePersonInputAndResponseResult.getEpostField());

        return CompletableFuture.completedFuture(endreResponse);
    }
}
