input DeleteInput @table(name : "CUSTOMER") {
  id: ID!
  firstName: String @field(name : "FIRST_NAME")
  email: String
}

type DeleteResponse {
  id: ID!
  firstName: String @field(name : "FIRST_NAME")
  email: String @field(name : "emailField")
}

type DeleteResponseWithCustomer {
  id: ID!
  customer: Customer @field(name : "customField")
}

type Mutation {
  deleteCustomerInput(input: DeleteInput!): ID! @mutation(typeName: DELETE)
  deleteCustomer2Params(input: DeleteInput!, lastName: String @field(name: "LAST_NAME")): ID! @mutation(typeName: DELETE)
  deleteCustomerInputAndResponse(input: DeleteInput!): DeleteResponse! @mutation(typeName: DELETE)
  deleteCustomerWithCustomerResponse(input: DeleteInput!): DeleteResponseWithCustomer! @mutation(typeName: DELETE)
}

type Customer implements Node @table {
  id: ID!
  firstName: String! @field(name: "FIRST_NAME")
  lastName: String! @field(name: "LAST_NAME")
  email: String
}
