package no.fellesstudentsystem.graphql.resolvers.mutation;

import graphql.schema.DataFetchingEnvironment;
import java.lang.Exception;
import java.lang.Override;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import javax.inject.Inject;
import no.fellesstudentsystem.graphql.generated.api.EndrePersonInputAndResponseMutationResolver;
import no.fellesstudentsystem.graphql.generated.model.EndreInput;
import no.fellesstudentsystem.graphql.generated.model.EndreResponse;
import no.fellesstudentsystem.graphql.queries.mutation.EndrePersonInputAndResponseDBQueries;
import no.fellesstudentsystem.kjerneapi.FieldHelpers;
import no.fellesstudentsystem.kjerneapi.tables.records.PersonRecord;
import org.jooq.DSLContext;

public class EndrePersonInputAndResponseGeneratedResolver implements EndrePersonInputAndResponseMutationResolver {
    @Inject
    DSLContext ctx;

    @Inject
    private EndrePersonInputAndResponseDBQueries endrePersonInputAndResponseDBQueries;

    @Override
    public CompletableFuture<List<EndreResponse>> endrePersonInputAndResponse(
            List<EndreInput> input, DataFetchingEnvironment env) throws Exception {
        var inputRecordList = new ArrayList<PersonRecord>();


        if (input != null) {
            for (var itInput : input) {
                if (itInput == null) continue;
                var inputRecord = new PersonRecord();
                inputRecord.attach(ctx.configuration());
                inputRecord.setId(itInput.getId());
                inputRecord.setFornavn(itInput.getFornavn());
                inputRecord.setEmailadressePrivat(itInput.getPrivatEpost());
                inputRecordList.add(inputRecord);
            }
        }
        FieldHelpers.setPersonKeysFromPlattformIds(ctx, inputRecordList);

        var endrePersonInputAndResponseResult = endrePersonInputAndResponseDBQueries.endrePersonInputAndResponse(inputRecordList);

        var endreResponseList = new ArrayList<EndreResponse>();
        for (var itInputRecordList : inputRecordList) {
            var endreResponse = new EndreResponse();
            endreResponse.setId(itInputRecordList.getId());
            endreResponseList.add(endreResponse);
        }

        return CompletableFuture.completedFuture(endreResponseList);
    }
}
