input InsertInput @table(name : "CUSTOMER") {
  id: ID!
  customerId: String! @column(name: "CUSTOMER_ID")
  firstName: String! @column(name: "FIRST_NAME")
  lastName: String! @column(name: "LAST_NAME")
  storeId: String! @column(name: "STORE_ID")
  addressId: String! @column(name: "ADDRESS_ID")
  active: Boolean! @column(name: "ACTIVEBOOL")
  createdDate: Date! @column(name: "CREATE_DATE")
}

type EditResponse {
  id: ID!
  firstName: String @column(name : "FIRST_NAME")
  email: String @column(name : "emailField")
}

type EditResponseWithCustomer {
  id: ID!
  customer: Customer @column(name : "customField")
}

type Mutation {
  insertCustomersInput(input: [InsertInput!]): [ID!] @mutationType(typeName: INSERT)
  insertCustomers2Params(input: [InsertInput!], lastName: String @column(name: "LAST_NAME")): [ID!] @mutationType(typeName: INSERT)
  insertCustomersInputAndResponse(input: [InsertInput!]): [EditResponse!] @mutationType(typeName: INSERT)
  insertCustomersWithCustomerResponse(input: [InsertInput!]): [EditResponseWithCustomer!] @mutationType(typeName: INSERT)
}

type Customer implements Node @table {
  id: ID!
  firstName: String! @column(name: "FIRST_NAME")
  lastName: String! @column(name: "LAST_NAME")
  email: String
}
