input EditInput @table(name : "CUSTOMER") {
  id: ID!
  firstName: String @column(name : "FIRST_NAME")
  email: String
}

type EditResponse {
  id: ID!
  firstName: String @column(name : "FIRST_NAME")
  email: String @column(name : "emailField")
}

type EditResponseWithCustomer {
  id: ID!
  customer: Customer @column(name : "customField")
  post: Postadresse
}

type Mutation {
  editCustomerInput(input: EditInput!): ID! @mutation(typeName: UPDATE)
  editCustomer2Params(input: EditInput!, lastName: String @column(name: "LAST_NAME")): ID! @mutation(typeName: UPDATE)
  editCustomerInputAndResponse(input: EditInput!): EditResponse! @mutation(typeName: UPDATE)
  editCustomerWithCustomerResponse(input: EditInput!): EditResponseWithCustomer! @mutation(typeName: UPDATE)
}

type Customer implements Node @table {
  id: ID!
  firstName: String! @column(name: "FIRST_NAME")
  lastName: String! @column(name: "LAST_NAME")
  email: String
}
