package no.fellesstudentsystem.graphql.resolvers.mutation;

import graphql.schema.DataFetchingEnvironment;
import java.lang.Exception;
import java.lang.Override;
import java.lang.String;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import javax.inject.Inject;
import no.fellesstudentsystem.graphitron.services.TestPersonService;
import no.fellesstudentsystem.graphql.generated.api.EndrePersonListResponseMutationResolver;
import no.fellesstudentsystem.graphql.generated.model.EndreResponse;
import no.fellesstudentsystem.graphql.helpers.selection.SelectionSet;
import org.jooq.DSLContext;

public class EndrePersonListResponseGeneratedResolver implements EndrePersonListResponseMutationResolver {
    @Inject
    DSLContext ctx;

    @Override
    public CompletableFuture<List<EndreResponse>> endrePersonListResponse(List<String> id,
            DataFetchingEnvironment env) throws Exception {
        var testPersonService = new TestPersonService(ctx);
        var select = new SelectionSet(env.getSelectionSet());

        var endrePersonListResponseResult = testPersonService.endrePersonListResponse(id);


        var endreResponseList = new ArrayList<EndreResponse>();
        for (var itEndrePersonListResponseResult : endrePersonListResponseResult) {
            var endreResponse = new EndreResponse();
            endreResponse.setId(itEndrePersonListResponseResult.getId());
            endreResponse.setFornavn(itEndrePersonListResponseResult.getFornavn());
            endreResponse.setPrivatEpost(itEndrePersonListResponseResult.getEpostField());
            endreResponseList.add(endreResponse);
        }

        return CompletableFuture.completedFuture(endreResponseList);
    }
}
