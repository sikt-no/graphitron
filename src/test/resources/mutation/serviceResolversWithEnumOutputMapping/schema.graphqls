type EditFilmResponseLevel1 @record(record: {name: "TEST_FILM_RECORD"})  {
  film: Film @field(name: "record")
  rating1: RatingNoConverter! @field(name: "ratingNoConverter")
  rating2: Rating! @field(name: "ratingWithConverter")
  level2: EditFilmResponseLevel2
  level2List: [EditFilmResponseLevel2]
}

type EditFilmResponseLevel2 {
  rating1: RatingNoConverter! @field(name: "ratingNoConverter")
  rating2: Rating! @field(name: "ratingWithConverter")
  film: [Film] @field(name: "record")
}

type Mutation {
  editFilm(id: ID!): EditFilmResponseLevel1! @service(service: {name: "TEST_FILM"})
}

type Film implements Node @table {
  id: ID!
  rating1: RatingNoConverter! @field(name: "rating")
  rating2: Rating! @field(name: "rating")
}

enum RatingNoConverter { G, PG, R, } # No jOOQ converter.

enum Rating @enum(enumReference: {name: "RATING_TEST"}) { G, PG, R, } # With jOOQ converter.