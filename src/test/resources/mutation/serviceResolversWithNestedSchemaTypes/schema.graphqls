type EditResponse @record(record: {name: "TEST_CUSTOMER_RESPONSE2"}) {
  id: ID! @field(name: "Id2")
  customerC: Customer @field(name: "customer")
  customerSplit: Customer @field(name: "customer") @splitQuery # Should not be included in mapper.
}

type Mutation {
  editCustomer(id: ID!): EditResponse! @service(service : {name: "TEST_CUSTOMER"})
}

type Customer implements Node @table {
  id: ID!
  name: Name
  nameTwoLevels: NameLevels
  postalCode: String @field(name : "POSTAL_CODE")
  lastUpdate: DateTime @field(name : "LAST_UPDATE")
  address: Address! @splitQuery # Should not be applied.
}

type Name {
  first: String! @field(name: "FIRST_NAME")
  last: String! @field(name: "LAST_NAME")
}

type NameLevels {
  name: Name
}

type Address implements Node @table {
  id: ID!
  postalCode: String!
}
