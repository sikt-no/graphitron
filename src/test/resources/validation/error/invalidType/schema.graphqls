type Query {
  customer(id: ID!): Customer # Valid
  rental(id: ID!): Rentaaal # Invalid
  rentalUnion(id: ID!): RentalUnion # Invalid union
  rentalUnionExtra(id: ID!): RentalUnionExtra # Invalid union, layered
  payment(id: ID!): Payment # Invalid, two equivalent options
}

type Customer @table {
  id: ID!
  customer: Customer # Valid
  rental: Rentaaal # Invalid
}

type Rental @table {
  id: ID!
}

type Payment0 @table {
  id: ID!
}

type Payment1 @table {
  id: ID!
}

union RentalUnion = Rentaaaaal | Rental
union RentalUnionExtra = Reeentaaaaal | RentalUnion
