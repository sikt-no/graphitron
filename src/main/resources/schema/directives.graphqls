"""Avslutter gjeldende spørringskontekst og oppretter en ny. Kodegeneratoren oppretter dermed en ny SQL-spørring fra dette punktet."""
directive @splitQuery on FIELD_DEFINITION

"""Definerer at generatoren skal unnlate å generere en metode for dette feltet."""
directive @notGenerated on FIELD_DEFINITION

"""
Knytter en objekt- eller inputobjekt-type til en tabell i KjerneAPI.
"""
directive @table(
  """Tabellnavn i KjerneAPI. Antas å være samme som objektnavn hvis ikke oppgitt."""
  name: String
) on OBJECT | INPUT_OBJECT

"""Knytter feltet (eller argumentet) til en kolonne i KjerneAPI."""
directive @column(
  """Kolonnenavn i KjerneAPI."""
  name: String!,

  """Slå opp navnet i en relatert tabell i stedet. Tabellnavn i KjerneAPI."""
  table: String,
  """Fremmednøkkelen som knytter sammen den relaterte tabellen til gjeldende tabell."""
  key: String
) on FIELD_DEFINITION | ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION | ENUM_VALUE

"""Links this schema enum to a Java enum class. Available values are set in the plugin configuration."""
directive @enum(enumReference: ExternalCodeReference!) on ENUM

"""
Use an external service to do the mutation operation.
The signature of the method must match the inputs of the mutation.
Available values are set in the plugin configuration.
"""
directive @service(service: ExternalCodeReference!) on FIELD_DEFINITION

"""
Map this type to a Java exception class.
Only applicable on types that implement the Error interface.
Available values are set in the plugin configuration.
"""
directive @error(error: ExternalCodeReference!) on OBJECT

"""Helps create connections between tables where a simple implicit join would be insufficient."""
directive @reference(
  """The jOOQ table to connect to."""
  table: String

  """The key to use to create this reference."""
  key: String,

  """Adjust the condition for this reference. Available values are set in the plugin configuration."""
  condition: ExternalCodeReference,

  """Extra reference steps that must be taken to complete the reference."""
  via: [ReferenceElement!]
) on FIELD_DEFINITION

"""Adjust constraints for this field, argument or input field."""
directive @condition(
  """Condition to be used. Available values are set in the plugin configuration."""
  condition: ExternalCodeReference,
  """If true, this condition should be used instead of the usual checks that are generated."""
  override: Boolean = false
) on FIELD_DEFINITION | ARGUMENT_DEFINITION | INPUT_FIELD_DEFINITION

directive @mutation(typeName: MutationType!) on FIELD_DEFINITION


enum MutationType { UPDATE, DELETE, INSERT, UPSERT }

input ExternalCodeReference { name: String!, method: String }

input ReferenceElement { table: String!, key: String, condition: ExternalCodeReference }
