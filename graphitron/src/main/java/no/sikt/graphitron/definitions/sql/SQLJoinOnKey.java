package no.sikt.graphitron.definitions.sql;

import com.squareup.javapoet.CodeBlock;
import no.sikt.graphitron.definitions.mapping.JOOQMapping;
import no.sikt.graphitron.generators.context.JoinListSequence;

/**
 * SQL join condition which joins on a single key generated by jOOQ, referred to by name.
 */
public class SQLJoinOnKey extends SQLJoinField {
    private final static String JOOQ_METHOD_CALL = "onKey";
    private final static int orderingPriority = 0; // onKey MUST be first.
    private final JOOQMapping key;

    /**
     * @param key The name of a key generated by jOOQ.
     */
    public SQLJoinOnKey(JOOQMapping key) {
        this.key = key;
    }

    /**
     * @return jOOQ name of the key.
     */
    public JOOQMapping getKey() {
        return key;
    }

    public int getOrderingPriority() {
        return orderingPriority;
    }

    @Override
    public String getMethodCallName() {
        return JOOQ_METHOD_CALL;
    }

    @Override
    public CodeBlock toJoinString(JoinListSequence joinSequence, String aliasName) {
        return CodeBlock.of(getKey().getMappingName());
    }
}
