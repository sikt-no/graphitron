/*
 * This file is generated by jOOQ.
 */
package no.sikt.graphitron.jooq.generated.testdata.public_.tables.records;


import javax.annotation.processing.Generated;

import no.sikt.graphitron.jooq.generated.testdata.public_.tables.Vacation;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.18",
        "schema version:1.10"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VacationRecord extends UpdatableRecordImpl<VacationRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.vacation.vacation_id</code>.
     */
    public void setVacationId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.vacation.vacation_id</code>.
     */
    public Long getVacationId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.vacation.description</code>.
     */
    public void setDescription(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.vacation.description</code>.
     */
    public String getDescription() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.vacation.parent_id</code>.
     */
    public void setParentId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.vacation.parent_id</code>.
     */
    public Long getParentId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VacationRecord
     */
    public VacationRecord() {
        super(Vacation.VACATION);
    }

    /**
     * Create a detached, initialised VacationRecord
     */
    public VacationRecord(Long vacationId, String description, Long parentId) {
        super(Vacation.VACATION);

        setVacationId(vacationId);
        setDescription(description);
        setParentId(parentId);
        resetChangedOnNotNull();
    }
}
