/*
 * This file is generated by jOOQ.
 */
package no.sikt.graphitron.jooq.generated.testdata.public_;


import javax.annotation.processing.Generated;

import org.jooq.Domain;
import org.jooq.Schema;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.LazySchema;
import org.jooq.impl.SQLDataType;


/**
 * Convenience access to all Domains in public.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.18",
        "schema version:1.10"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Domains {

    /**
     * The domain <code>public.year</code>.
     */
    public static final Domain<Integer> YEAR = Internal.createDomain(
          schema()
        , DSL.name("year")
        , SQLDataType.INTEGER
        , Internal.createCheck(null, null, "CHECK (((VALUE >= 1901) AND (VALUE <= 2155)))")
    );

    private static final Schema schema() {
        return new LazySchema(DSL.name("public"), DSL.comment(""), () -> Public.PUBLIC);
    }
}
