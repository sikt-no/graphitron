# Modified version of graphitron-example/graphitron-example-spec/target/generated-resources/graphql_transformer/generator-schema.graphql

schema @link(url : "https://specs.apollo.dev/federation/v2.4", import : ["@key"]){
    query: Query
}

type Address @table @key(fields : "id", resolvable : false) {
    id: ID!
    addressLine1: String! @field(name : "ADDRESS_")
    addressLine2: String @field(name : "ADDRESS2")
    city: City!
    zip: String @field(name : "POSTAL_CODE")
    phone: String!
}

type City implements Node @table @node(typeId : "CityType") {
    id: ID!
    name: String! @field(name : "CITY_")
    countryName: String! @field(name : "COUNTRY_") @reference(references : [{table : "COUNTRY"}])
}

type CityAddressesPaginatedConnection {
    edges: [CityAddressesPaginatedConnectionEdge]
    pageInfo: PageInfo
    nodes: [Address]
    totalCount: Int
}

type CityAddressesPaginatedConnectionEdge {
    cursor: String
    node: Address
}

type Customer implements Node @node @table {
    #id: ID!  #removed to test generation of types with no id field
    name: CustomerName
    email: String
    address: Address!
}

type CustomerConnection {
    edges: [CustomerConnectionEdge]
    pageInfo: PageInfo
    nodes: [Customer!]!
    totalCount: Int
}

type CustomerConnectionEdge {
    cursor: String
    node: Customer
}

type CustomerName {
    firstName: String! @field(name : "FIRST_NAME")
    lastName: String! @field(name : "LAST_NAME")
}

interface Node {
    id: ID!
}

type PageInfo {
    hasPreviousPage: Boolean!
    hasNextPage: Boolean!
    startCursor: String
    endCursor: String
}

type Query {
    customers(first: Int = 100, after: String): CustomerConnection
    customersByID(id: ID!): CustomerConnection #with nonNullable/required input
    # should not be generated, because of @excludeFromUI
    customersNotGenerated(first: Int = 10, after: String): CustomerConnection @excludeFromUI
}