/*
 * This file is generated by jOOQ.
 */
package no.sikt.graphitron.example.generated.jooq;


import java.util.Arrays;
import java.util.EnumSet;

import javax.annotation.processing.Generated;

import no.sikt.graphitron.example.generated.jooq.tables.Actor;
import no.sikt.graphitron.example.generated.jooq.tables.Film;

import org.jooq.Trigger;
import org.jooq.TriggerEvent;
import org.jooq.TriggerExecution;
import org.jooq.TriggerTime;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * Convenience access to all triggers in public.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.19.12",
        "schema version:1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Triggers {

    /**
     * The trigger <code>public.film_fulltext_trigger</code>
     */
    public static final Trigger FILM_FULLTEXT_TRIGGER = Internal.createTrigger(Public.PUBLIC, Film.FILM, Arrays.asList(), DSL.name("film_fulltext_trigger"), DSL.comment(""), TriggerTime.BEFORE, EnumSet.of(TriggerEvent.INSERT, TriggerEvent.UPDATE), TriggerExecution.FOR_EACH_ROW, null, 1, DSL.statement("EXECUTE FUNCTION tsvector_update_trigger('fulltext', 'pg_catalog.english', 'title', 'description')"));

    /**
     * The trigger <code>public.last_updated</code>
     */
    public static final Trigger LAST_UPDATED = Internal.createTrigger(Public.PUBLIC, Actor.ACTOR, Arrays.asList(), DSL.name("last_updated"), DSL.comment(""), TriggerTime.BEFORE, EnumSet.of(TriggerEvent.UPDATE), TriggerExecution.FOR_EACH_ROW, null, 1, DSL.statement("EXECUTE FUNCTION last_updated()"));
}
